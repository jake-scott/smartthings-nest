// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CallbackAuth callback auth
//
// swagger:model CallbackAuth
type CallbackAuth struct {

	// client Id
	// Max Length: 100
	ClientID string `json:"clientId,omitempty"`

	// code
	// Max Length: 256
	Code string `json:"code,omitempty"`

	// grant type
	// Max Length: 30
	GrantType string `json:"grantType,omitempty"`

	// scope
	// Max Length: 256
	Scope string `json:"scope,omitempty"`
}

// Validate validates this callback auth
func (m *CallbackAuth) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClientID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateGrantType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateScope(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CallbackAuth) validateClientID(formats strfmt.Registry) error {

	if swag.IsZero(m.ClientID) { // not required
		return nil
	}

	if err := validate.MaxLength("clientId", "body", string(m.ClientID), 100); err != nil {
		return err
	}

	return nil
}

func (m *CallbackAuth) validateCode(formats strfmt.Registry) error {

	if swag.IsZero(m.Code) { // not required
		return nil
	}

	if err := validate.MaxLength("code", "body", string(m.Code), 256); err != nil {
		return err
	}

	return nil
}

func (m *CallbackAuth) validateGrantType(formats strfmt.Registry) error {

	if swag.IsZero(m.GrantType) { // not required
		return nil
	}

	if err := validate.MaxLength("grantType", "body", string(m.GrantType), 30); err != nil {
		return err
	}

	return nil
}

func (m *CallbackAuth) validateScope(formats strfmt.Registry) error {

	if swag.IsZero(m.Scope) { // not required
		return nil
	}

	if err := validate.MaxLength("scope", "body", string(m.Scope), 256); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CallbackAuth) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CallbackAuth) UnmarshalBinary(b []byte) error {
	var res CallbackAuth
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
