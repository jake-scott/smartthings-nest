// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Manufacturer manufacturer
//
// swagger:model Manufacturer
type Manufacturer struct {

	// hw version
	// Max Length: 100
	HwVersion string `json:"hwVersion,omitempty"`

	// manufacturer name
	// Required: true
	// Max Length: 100
	ManufacturerName *string `json:"manufacturerName"`

	// model name
	// Required: true
	// Max Length: 100
	ModelName *string `json:"modelName"`

	// sw version
	// Max Length: 100
	SwVersion string `json:"swVersion,omitempty"`
}

// Validate validates this manufacturer
func (m *Manufacturer) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHwVersion(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateManufacturerName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateModelName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSwVersion(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Manufacturer) validateHwVersion(formats strfmt.Registry) error {

	if swag.IsZero(m.HwVersion) { // not required
		return nil
	}

	if err := validate.MaxLength("hwVersion", "body", string(m.HwVersion), 100); err != nil {
		return err
	}

	return nil
}

func (m *Manufacturer) validateManufacturerName(formats strfmt.Registry) error {

	if err := validate.Required("manufacturerName", "body", m.ManufacturerName); err != nil {
		return err
	}

	if err := validate.MaxLength("manufacturerName", "body", string(*m.ManufacturerName), 100); err != nil {
		return err
	}

	return nil
}

func (m *Manufacturer) validateModelName(formats strfmt.Registry) error {

	if err := validate.Required("modelName", "body", m.ModelName); err != nil {
		return err
	}

	if err := validate.MaxLength("modelName", "body", string(*m.ModelName), 100); err != nil {
		return err
	}

	return nil
}

func (m *Manufacturer) validateSwVersion(formats strfmt.Registry) error {

	if swag.IsZero(m.SwVersion) { // not required
		return nil
	}

	if err := validate.MaxLength("swVersion", "body", string(m.SwVersion), 100); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Manufacturer) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Manufacturer) UnmarshalBinary(b []byte) error {
	var res Manufacturer
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
